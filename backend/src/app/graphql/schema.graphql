### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AirDropToken {
  User: User
  chainName: String
  coinName: String
  coinSymbol: String
  id: Int!
  maxNumber: Int
  requirementType: RequirementType
  status: String
  type: Type
  userId: Int!
}

type Mutation {
  createAirDropToken(chainName: String!, coinName: String!, coinSymbol: String!, endTime: String!, maxNumber: Int, requirementType: RequirementType, startTime: String!, status: String!, type: Type, userId: Int): AirDropToken!
  deleteDropToken(id: Int!): AirDropToken
  generatePasswords(dropId: Int, participants: Int): String!
  updateAirDropToken(chainName: String!, coinName: String!, coinSymbol: String!, endTime: String!, id: Int, maxNumber: Int, requirementType: RequirementType, startTime: String!, status: String!, type: Type, userId: Int): AirDropToken!
}

type PasswordProtected {
  airDrop: AirDropToken
  dropId: Int
  id: Int
  passwords: [String]
}

type Query {
  getAirDrop(id: Int!): AirDropToken
  getDrops: [AirDropToken]
  getMyDrops(id: Int!): [AirDropToken]
  getUser(id: Int!): User
  users: [User]
}

enum RequirementType {
  NFT_REQUIRED
  PASSWORD
  TOKEN_REQUIRED
}

enum Role {
  CREATOR
  USER
}

enum Type {
  LOTTERY
  TOKEN_LIMITED
  USER_LIMITED
}

type User {
  id: Int!
  role: Role
  wallet: String
}